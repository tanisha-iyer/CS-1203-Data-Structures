#include <stdio.h>

void swap(int *a, int *b) { // swapping allows for permutations of integers in aray be made
    int temp = *a;
    *a = *b;
    *b = temp;
}

int main() {
    int n; // number till which permutations given from 1...n
    printf("n: ");
    scanf("%d", &n);

    if (n > 8) {
        printf("NA\n"); // condition when n > 8, there are no permutations given 
        return 1;
    }

    int a[n]; // array of elements of permutations to be made 
    for (int i = 0; i < n; i++) {
        a[i] = i + 1;
    }

    int b[n]; // An array to keep track of the direction to move in each iteration
    for (int i = 0; i < n; i++) {
        b[i] = 0;
    }

    int i = 0;
    printf("\n");
    while (i < n) {
        if (b[i] < i) {
            if (i % 2 == 0) {
                swap(&a[0], &a[i]);
            } else {
                swap(&a[b[i]], &a[i]);
            }
            for (int j = 0; j < n; j++) {
                printf("%d ", a[j]);
            }
            printf("\n");
            b[i]++;
            i = 0;
        } else {
            b[i] = 0;
            i++;
        }
    }
    return 0;
}
